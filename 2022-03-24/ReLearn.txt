1. 309. 最佳买卖股票时机含冷冻期 dp
2. 301 ()())()"删除无效的括号 返回所有可能的结果 dfs+剪枝  bfs+剪枝
3. 位运算技巧
    1.取出一个数的最后一个1：a&(-a)
    2.给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。
        说明：你的算法应该具有线性时间复杂度。你可以不使用额外空间来实现吗？
        分析：这题和上一题的思路略有不同，这题其他数字出现了 3 次。
        那么我们如果直接使用位运算异或操作的话无法直接找到结果，
        就需要巧妙的运用二进制的其他特性：判断整除求余操作。
        即判断所有数字二进制 1 的总个数和 0 的总个数，
        一定有一个不是三的整数倍，
        如果 0 不是三的整数倍那么就说明结果的该位二进制数字为 0，同理否则为 1。
    3.一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。
        先异或一遍到最后得到一个数，得到的肯定是 a^b (假设两个数值分别为a和b)的值。
        在看异或^的属性：不同为 1，相同为 0。 也就是说最终这个结果的二进制为 1 的位置上 a 和 b 是不相同的
        。而我们可以找到这个第一个不同的位，然后将数组中的数分成两份，
        该位为 0 的进行异或求解得到其中一个结果 a，该位为 1 的进行异或求解得到另一个结果 b。
    4.lowbit：计算一个数字 x 二进制下最低位 1 对应的值  x&(-x);
    5.把一个数字 x 二进制下最靠右的第一个 1 去掉。 x = x & (x-1) 1的位数
    6.计算一个数字 x 二进制下含有 1 或 0 的个数 while(x){  x = x & (x-1); num++;}
    7.去右边连续1;  100101111->1111   (x^(x+1))>>1
    8.背包硬币问题 先总数在硬币 不然易漏 322
    9.背包9讲（有空）https://leetcode-cn.com/problems/coin-change/solution/dong-tai-gui-hua-shi-yong-wan-quan-bei-bao-wen-ti-/
    10.树状dp 一般向左右儿子要点东西
    11.区间dp 312
